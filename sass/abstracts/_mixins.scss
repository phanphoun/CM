// ===========================================
// _mixins.scss - Responsive and Utility Mixins
// ===========================================

// Media Query Mixins - Mobile First Approach
// Usage: @include respond(md) { ... }
@mixin respond($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// Flexbox Utilities
// Usage: @include flex-center; @include flex-between;
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// Grid Utilities  
// Usage: @include grid-columns(3); @include grid-gap(md);
@mixin grid-columns($columns) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
}

@mixin grid-gap($size) {
  @if $size == sm {
    gap: $spacing-sm;
  }
  @if $size == md {
    gap: $spacing-md;
  }
  @if $size == lg {
    gap: $spacing-lg;
  }
  @if $size == xl {
    gap: $spacing-xl;
  }
}

// Typography Mixins
@mixin heading-1 {
  font-size: $font-size-5xl;
  font-weight: 700;
  line-height: 1.1;
  margin-bottom: $spacing-lg;
}

@mixin heading-2 {
  font-size: $font-size-4xl;
  font-weight: 600;
  line-height: 1.2;
  margin-bottom: $spacing-md;
}

@mixin heading-3 {
  font-size: $font-size-3xl;
  font-weight: 600;
  line-height: 1.3;
  margin-bottom: $spacing-md;
}

@mixin heading-4 {
  font-size: $font-size-2xl;
  font-weight: 600;
  line-height: 1.4;
  margin-bottom: $spacing-sm;
}

@mixin body-text {
  font-size: $font-size-base;
  line-height: 1.6;
  margin-bottom: $spacing-md;
}

@mixin small-text {
  font-size: $font-size-sm;
  line-height: 1.5;
  color: $color-text-secondary;
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-sm $spacing-lg;
  border-radius: 0.375rem;
  font-weight: 500;
  text-decoration: none;
  transition: all $transition-base;
  cursor: pointer;
  border: none;
  font-family: $font-family-primary;
}

@mixin button-primary {
  @include button-base;
  background-color: $color-primary;
  color: white;
  
  &:hover {
    background-color: darken($color-primary, 10%);
    transform: translateY(-2px);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $color-primary;
  border: 2px solid $color-primary;
  
  &:hover {
    background-color: $color-primary;
    color: white;
    transform: translateY(-2px);
  }
}

@mixin button-accent {
  @include button-base;
  background-color: $color-accent;
  color: white;
  
  &:hover {
    background-color: darken($color-accent, 10%);
    transform: translateY(-2px);
  }
}

// Card Mixins
@mixin card-base {
  background: white;
  border-radius: 0.5rem;
  padding: $spacing-lg;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  transition: all $transition-base;
  border: 1px solid $color-border;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }
}

// Gradient Background Mixins
@mixin gradient-background($gradient) {
  background: $gradient;
  color: white;
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.1);
    border-radius: inherit;
  }
}

// Animation Mixins
@mixin fade-in($delay: 0s) {
  opacity: 0;
  transform: translateY(20px);
  animation: fadeInUp 0.6s ease forwards;
  animation-delay: $delay;
}

@mixin slide-in($direction: 'left', $delay: 0s) {
  opacity: 0;
  
  @if $direction == 'left' {
    transform: translateX(-30px);
  } @else if $direction == 'right' {
    transform: translateX(30px);
  } @else if $direction == 'up' {
    transform: translateY(30px);
  } @else if $direction == 'down' {
    transform: translateY(-30px);
  }
  
  animation: slideIn 0.6s ease forwards;
  animation-delay: $delay;
}

// Responsive Typography Mixins
@mixin responsive-text($mobile-size, $desktop-size) {
  font-size: $mobile-size;
  
  @include respond(md) {
    font-size: $desktop-size;
  }
}

// Utility Mixins
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin focus-ring {
  outline: 2px solid $color-primary;
  outline-offset: 2px;
}

// Animation Keyframes
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@mixin disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

// ===========================================
// Animation Mixins
// ===========================================

// Generic pulse animation mixin
// Usage: @include pulse-animation(#ff0000, 'my-pulse');
@mixin pulse-animation($color, $name: 'pulse') {
  @keyframes #{$name} {
    0% {
      box-shadow: 0 0 0 0 rgba($color, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba($color, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba($color, 0);
    }
  }
}

// Fade-in animation mixin
// Usage: @include fade-in-animation(0.5s, 'fade-in');
@mixin fade-in-animation($duration: 0.5s, $name: 'fade-in') {
  @keyframes #{$name} {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Hover effect mixin
// Usage: @include hover-effect(scale(1.05), 0.3s);
@mixin hover-effect($transform: scale(1.05), $duration: 0.3s) {
  transition: transform $duration ease-in-out, box-shadow $duration ease-in-out;
  
  &:hover {
    transform: $transform;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  }
}
